{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../api/axios\";\n\n// Async action for registering a new user\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await API.post(\"api/auth/register/\", userData);\n    if (response.data.status !== \"success\") {\n      throw new Error(response.data.message || \"Registration failed\");\n    }\n    return {\n      user_id: response.data.user_id,\n      name: response.data.name,\n      email: response.data.email\n    };\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","registerUser","userData","rejectWithValue","response","post","data","status","Error","message","user_id","name","email","error","_error$response","authSlice","initialState","user","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/MytaskFinal/frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../api/axios\";\r\n\r\n// Async action for registering a new user\r\nexport const registerUser = createAsyncThunk(\r\n    \"auth/registerUser\",\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await API.post(\"api/auth/register/\", userData);\r\n\r\n            if (response.data.status !== \"success\") {\r\n                throw new Error(response.data.message || \"Registration failed\");\r\n            }\r\n\r\n            return {\r\n                user_id: response.data.user_id,\r\n                name: response.data.name,\r\n                email: response.data.email\r\n            };\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data.message || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(registerUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(registerUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            })\r\n            .addCase(registerUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,cAAc;;AAE9B;AACA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CACxC,mBAAmB,EACnB,OAAOG,QAAQ,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,oBAAoB,EAAEH,QAAQ,CAAC;IAE/D,IAAIE,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;MACpC,MAAM,IAAIC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAI,qBAAqB,CAAC;IACnE;IAEA,OAAO;MACHC,OAAO,EAAEN,QAAQ,CAACE,IAAI,CAACI,OAAO;MAC9BC,IAAI,EAAEP,QAAQ,CAACE,IAAI,CAACK,IAAI;MACxBC,KAAK,EAAER,QAAQ,CAACE,IAAI,CAACM;IACzB,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,OAAOX,eAAe,CAAC,EAAAW,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,uBAAdA,eAAA,CAAgBR,IAAI,CAACG,OAAO,KAAII,KAAK,CAACJ,OAAO,CAAC;EACzE;AACJ,CACJ,CAAC;AAED,MAAMM,SAAS,GAAGjB,WAAW,CAAC;EAC1Ba,IAAI,EAAE,MAAM;EACZK,YAAY,EAAE;IACVC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,KAAK;IACdL,KAAK,EAAE;EACX,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACrB,YAAY,CAACsB,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACX,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDS,OAAO,CAACrB,YAAY,CAACwB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACrB,YAAY,CAAC2B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}