{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../api/axios\";\n\n// Async action for registering a new user\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await API.post(\"api/auth/register/\", userData);\n    if (response.data.status !== \"success\") {\n      throw new Error(response.data.message || \"Registration failed\");\n    }\n    return {\n      user_id: response.data.user_id,\n      name: response.data.name,\n      email: response.data.email\n    };\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message);\n  }\n});\n\n// ✅ Async action for logging in a user\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await API.post(\"api/auth/login/\", credentials);\n    if (response.data.status !== \"success\") {\n      throw new Error(response.data.message || \"Login failed\");\n    }\n\n    // Store token and user details in local storage\n    localStorage.setItem(\"access_token\", response.data.access_token);\n    localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    return response.data.user;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) || error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: JSON.parse(localStorage.getItem(\"user\")) || null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      state.user = null;\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"user\");\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Register User\n    .addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // ✅ Login User\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","registerUser","userData","rejectWithValue","response","post","data","status","Error","message","user_id","name","email","error","_error$response","loginUser","credentials","localStorage","setItem","access_token","JSON","stringify","user","_error$response2","authSlice","initialState","parse","getItem","loading","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/MytaskFinal/frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../api/axios\";\r\n\r\n// Async action for registering a new user\r\nexport const registerUser = createAsyncThunk(\r\n    \"auth/registerUser\",\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await API.post(\"api/auth/register/\", userData);\r\n\r\n            if (response.data.status !== \"success\") {\r\n                throw new Error(response.data.message || \"Registration failed\");\r\n            }\r\n\r\n            return {\r\n                user_id: response.data.user_id,\r\n                name: response.data.name,\r\n                email: response.data.email,\r\n            };\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data.message || error.message);\r\n        }\r\n    }\r\n);\r\n\r\n// ✅ Async action for logging in a user\r\nexport const loginUser = createAsyncThunk(\r\n    \"auth/loginUser\",\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const response = await API.post(\"api/auth/login/\", credentials);\r\n\r\n            if (response.data.status !== \"success\") {\r\n                throw new Error(response.data.message || \"Login failed\");\r\n            }\r\n\r\n            // Store token and user details in local storage\r\n            localStorage.setItem(\"access_token\", response.data.access_token);\r\n            localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n\r\n            return response.data.user;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data.message || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        user: JSON.parse(localStorage.getItem(\"user\")) || null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"user\");\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            // Register User\r\n            .addCase(registerUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(registerUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            })\r\n            .addCase(registerUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n            \r\n            // ✅ Login User\r\n            .addCase(loginUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(loginUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            })\r\n            .addCase(loginUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}