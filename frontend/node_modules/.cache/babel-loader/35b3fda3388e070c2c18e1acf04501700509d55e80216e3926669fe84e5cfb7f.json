{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Async action for login\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:8000/api/authenticate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    const result = await response.json();\n    if (result.status !== \"success\") throw new Error(result.message || \"Login failed\");\n    localStorage.setItem(\"access_token\", result.access_token);\n    localStorage.setItem(\"user\", JSON.stringify(result.user));\n    return {\n      user: result.user,\n      token: result.access_token\n    };\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: JSON.parse(localStorage.getItem(\"user\")) || null,\n    token: localStorage.getItem(\"access_token\") || null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"user\");\n      state.user = null;\n      state.token = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","credentials","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","result","json","status","Error","message","localStorage","setItem","access_token","user","token","error","authSlice","name","initialState","parse","getItem","loading","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/nares/React - Python/frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Async action for login\r\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (credentials, { rejectWithValue }) => {\r\n    try {\r\n        const response = await fetch(\"http://localhost:8000/api/authenticate\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(credentials),\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (result.status !== \"success\") throw new Error(result.message || \"Login failed\");\r\n\r\n        localStorage.setItem(\"access_token\", result.access_token);\r\n        localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n\r\n        return { user: result.user, token: result.access_token };\r\n    } catch (error) {\r\n        return rejectWithValue(error.message);\r\n    }\r\n});\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        user: JSON.parse(localStorage.getItem(\"user\")) || null,\r\n        token: localStorage.getItem(\"access_token\") || null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"user\");\r\n            state.user = null;\r\n            state.token = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(loginUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(loginUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user = action.payload.user;\r\n                state.token = action.payload.token;\r\n            })\r\n            .addCase(loginUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CAAC,gBAAgB,EAAE,OAAOE,WAAW,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpG,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;IACpC,CAAC,CAAC;IAEF,MAAMS,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpC,IAAID,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,cAAc,CAAC;IAElFC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,MAAM,CAACO,YAAY,CAAC;IACzDF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACC,MAAM,CAACQ,IAAI,CAAC,CAAC;IAEzD,OAAO;MAAEA,IAAI,EAAER,MAAM,CAACQ,IAAI;MAAEC,KAAK,EAAET,MAAM,CAACO;IAAa,CAAC;EAC5D,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,OAAOlB,eAAe,CAACkB,KAAK,CAACN,OAAO,CAAC;EACzC;AACJ,CAAC,CAAC;AAEF,MAAMO,SAAS,GAAGvB,WAAW,CAAC;EAC1BwB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVL,IAAI,EAAEV,IAAI,CAACgB,KAAK,CAACT,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;IACtDN,KAAK,EAAEJ,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI;IACnDC,OAAO,EAAE,KAAK;IACdN,KAAK,EAAE;EACX,CAAC;EACDO,QAAQ,EAAE;IACNC,MAAM,EAAGC,KAAK,IAAK;MACfd,YAAY,CAACe,UAAU,CAAC,cAAc,CAAC;MACvCf,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;MAC/BD,KAAK,CAACX,IAAI,GAAG,IAAI;MACjBW,KAAK,CAACV,KAAK,GAAG,IAAI;IACtB;EACJ,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACjC,SAAS,CAACkC,OAAO,EAAGL,KAAK,IAAK;MACnCA,KAAK,CAACH,OAAO,GAAG,IAAI;MACpBG,KAAK,CAACT,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDa,OAAO,CAACjC,SAAS,CAACmC,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAC7CP,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACX,IAAI,GAAGkB,MAAM,CAACC,OAAO,CAACnB,IAAI;MAChCW,KAAK,CAACV,KAAK,GAAGiB,MAAM,CAACC,OAAO,CAAClB,KAAK;IACtC,CAAC,CAAC,CACDc,OAAO,CAACjC,SAAS,CAACsC,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MAC5CP,KAAK,CAACH,OAAO,GAAG,KAAK;MACrBG,KAAK,CAACT,KAAK,GAAGgB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAO,CAAC,GAAGP,SAAS,CAACkB,OAAO;AAC3C,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}