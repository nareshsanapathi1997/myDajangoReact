{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// Async thunk to fetch notes from the backend\nexport const fetchNotes = createAsyncThunk(\"notes/fetchNotes\", async () => {\n  const response = await fetch(\"http://localhost:8000/api/notes/\");\n  return response.json();\n});\nconst notesSlice = createSlice({\n  name: \"notes\",\n  initialState: {\n    items: [],\n    status: \"idle\",\n    // idle | loading | succeeded | failed\n    error: null\n  },\n  reducers: {\n    addNote: (state, action) => {\n      const newNote = {\n        id: state.items.length + 1,\n        // Generate a new ID\n        ...action.payload\n      };\n      state.items.push(newNote);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchNotes.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchNotes.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items = action.payload;\n    }).addCase(fetchNotes.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchNotes","response","fetch","json","notesSlice","name","initialState","items","status","error","reducers","addNote","state","action","newNote","id","length","payload","push","extraReducers","builder","addCase","pending","fulfilled","rejected","message","reducer"],"sources":["D:/Python/frontend/src/redux/notesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// Async thunk to fetch notes from the backend\r\nexport const fetchNotes = createAsyncThunk(\"notes/fetchNotes\", async () => {\r\n    const response = await fetch(\"http://localhost:8000/api/notes/\");\r\n    return response.json();\r\n});\r\n\r\nconst notesSlice = createSlice({\r\n    name: \"notes\",\r\n    initialState: {\r\n        items: [],\r\n        status: \"idle\", // idle | loading | succeeded | failed\r\n        error: null,\r\n    },\r\n     reducers: {\r\n        addNote: (state, action) => {\r\n          const newNote = {\r\n            id: state.items.length + 1, // Generate a new ID\r\n            ...action.payload,\r\n          };\r\n          state.items.push(newNote);\r\n        },\r\n      },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchNotes.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(fetchNotes.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.items = action.payload;\r\n            })\r\n            .addCase(fetchNotes.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.error = action.error.message;\r\n            });\r\n    },\r\n});\r\n\r\n\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACvE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAChE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC3BO,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IAAE;IAChBC,KAAK,EAAE;EACX,CAAC;EACAC,QAAQ,EAAE;IACPC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAG;QACdC,EAAE,EAAEH,KAAK,CAACL,KAAK,CAACS,MAAM,GAAG,CAAC;QAAE;QAC5B,GAAGH,MAAM,CAACI;MACZ,CAAC;MACDL,KAAK,CAACL,KAAK,CAACW,IAAI,CAACJ,OAAO,CAAC;IAC3B;EACF,CAAC;EACHK,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACrB,UAAU,CAACsB,OAAO,EAAGV,KAAK,IAAK;MACpCA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDa,OAAO,CAACrB,UAAU,CAACuB,SAAS,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACI,OAAO;IAChC,CAAC,CAAC,CACDI,OAAO,CAACrB,UAAU,CAACwB,QAAQ,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACJ,KAAK,CAACgB,OAAO;IACtC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAIF,eAAerB,UAAU,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}