{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Task Python\\\\frontend\\\\src\\\\pages\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"../redux/userSlice\";\nimport { Container, Table, Spinner, Alert, Card } from \"react-bootstrap\";\nimport Header from \"../layouts/Header\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    users,\n    status,\n    error\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingTop: \"80px\",\n        maxWidth: \"800px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-sm border-0\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary text-center mb-4\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), status === \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              variant: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), status === \"failed\" && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 49\n          }, this), status === \"succeeded\" && /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 45\n                }, this)]\n              }, user.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UserList, \"f2r2CvqIen92Xq8hzHVN1Ujiur8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchUsers","Container","Table","Spinner","Alert","Card","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","UserList","_s","dispatch","users","status","error","state","user","children","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingTop","maxWidth","className","Body","animation","variant","striped","bordered","hover","responsive","map","id","name","email","_c","$RefreshReg$"],"sources":["D:/My Task Python/frontend/src/pages/UserList.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../redux/userSlice\";\r\nimport { Container, Table, Spinner, Alert, Card } from \"react-bootstrap\";\r\nimport Header from \"../layouts/Header\";\r\n\r\nconst UserList = () => {\r\n    const dispatch = useDispatch();\r\n    const { users, status, error } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUsers());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container style={{ paddingTop: \"80px\", maxWidth: \"800px\" }}>\r\n                <Card className=\"shadow-sm border-0\">\r\n                    <Card.Body>\r\n                        <h2 className=\"text-primary text-center mb-4\">All Users</h2>\r\n\r\n                        {status === \"loading\" && (\r\n                            <div className=\"text-center\">\r\n                                <Spinner animation=\"border\" variant=\"primary\" />\r\n                            </div>\r\n                        )}\r\n\r\n                        {status === \"failed\" && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                        {status === \"succeeded\" && (\r\n                            <Table striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.map((user) => (\r\n                                        <tr key={user.id}>\r\n                                            <td>{user.id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>{user.email}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}