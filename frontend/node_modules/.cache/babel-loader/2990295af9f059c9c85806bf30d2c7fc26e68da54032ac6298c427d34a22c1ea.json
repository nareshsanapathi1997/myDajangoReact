{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../api/axios\";\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    console.log(credentials);\n    return false;\n    const response = await API.post(\"/authenticate\", credentials);\n    if (response.data.status !== \"success\") throw new Error(response.data.message || \"Login failed\");\n    localStorage.setItem(\"access_token\", response.data.access_token);\n    localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    return {\n      user: response.data.user,\n      token: response.data.access_token\n    };\n  } catch (error) {\n    return rejectWithValue(error.response ? error.response.data.message : error.message);\n  }\n});\n\n// Async action for registering a new user\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await API.post(\"/register\", userData);\n    if (response.data.status !== \"success\") {\n      throw new Error(response.data.message || \"Registration failed\");\n    }\n    return {\n      user: response.data.user,\n      token: response.data.access_token\n    };\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: JSON.parse(localStorage.getItem(\"user\")) || null,\n    token: localStorage.getItem(\"access_token\") || null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout: state => {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"user\");\n      state.user = null;\n      state.token = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","loginUser","credentials","rejectWithValue","console","log","response","post","data","status","Error","message","localStorage","setItem","access_token","JSON","stringify","user","token","error","registerUser","userData","_error$response","authSlice","name","initialState","parse","getItem","loading","reducers","logout","state","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/nares/React - Python/frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../api/axios\";\r\n\r\nexport const loginUser = createAsyncThunk(\"auth/loginUser\", async (credentials, { rejectWithValue }) => {\r\n    try {\r\n        console.log(credentials);return false;\r\n        const response = await API.post(\"/authenticate\", credentials);\r\n        if (response.data.status !== \"success\") throw new Error(response.data.message || \"Login failed\");\r\n\r\n        localStorage.setItem(\"access_token\", response.data.access_token);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n\r\n        return { user: response.data.user, token: response.data.access_token };\r\n    } catch (error) {\r\n        return rejectWithValue(error.response ? error.response.data.message : error.message);\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n// Async action for registering a new user\r\nexport const registerUser = createAsyncThunk(\r\n    \"auth/registerUser\",\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await API.post(\"/register\", userData);\r\n\r\n            if (response.data.status !== \"success\") {\r\n                throw new Error(response.data.message || \"Registration failed\");\r\n            }\r\n\r\n            return { user: response.data.user, token: response.data.access_token };\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data.message || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        user: JSON.parse(localStorage.getItem(\"user\")) || null,\r\n        token: localStorage.getItem(\"access_token\") || null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        logout: (state) => {\r\n            localStorage.removeItem(\"access_token\");\r\n            localStorage.removeItem(\"user\");\r\n            state.user = null;\r\n            state.token = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(loginUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(loginUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.user = action.payload.user;\r\n                state.token = action.payload.token;\r\n            })\r\n            .addCase(loginUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}