{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../api/axios\";\nexport const fetchNotes = createAsyncThunk(\"notes/fetchNotes\", async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await API.get(\"/notes/\");\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || error.message);\n  }\n});\nexport const addNote = createAsyncThunk(\"notes/addNote\", async (noteData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await API.post(\"/notes/\", noteData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.message) || error.message);\n  }\n});\nconst notesSlice = createSlice({\n  name: \"notes\",\n  initialState: {\n    items: [],\n    status: \"idle\",\n    error: null\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchNotes.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchNotes.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items = action.payload;\n    }).addCase(fetchNotes.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    }).addCase(addNote.pending, state => {\n      state.status = \"loading\";\n    }).addCase(addNote.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items.push(action.payload);\n    }).addCase(addNote.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    });\n  }\n});\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","fetchNotes","_","rejectWithValue","response","get","data","error","_error$response","message","addNote","noteData","post","_error$response2","notesSlice","name","initialState","items","status","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","push","reducer"],"sources":["D:/MytaskFinal/frontend/src/redux/notesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../api/axios\";\r\n\r\nexport const fetchNotes = createAsyncThunk(\"notes/fetchNotes\", async (_, { rejectWithValue }) => {\r\n    try {\r\n        const response = await API.get(\"/notes/\");\r\n        return response.data;\r\n    } catch (error) {\r\n        return rejectWithValue(error.response?.data.message || error.message);\r\n    }\r\n});\r\n\r\nexport const addNote = createAsyncThunk(\"notes/addNote\", async (noteData, { rejectWithValue }) => {\r\n    try {\r\n        const response = await API.post(\"/notes/\", noteData);\r\n        return response.data;\r\n    } catch (error) {\r\n        return rejectWithValue(error.response?.data.message || error.message);\r\n    }\r\n});\r\n\r\nconst notesSlice = createSlice({\r\n    name: \"notes\",\r\n    initialState: {\r\n        items: [],\r\n        status: \"idle\",\r\n        error: null,\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchNotes.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(fetchNotes.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.items = action.payload;\r\n            })\r\n            .addCase(fetchNotes.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.error = action.payload;\r\n            })\r\n            .addCase(addNote.pending, (state) => {\r\n                state.status = \"loading\";\r\n            })\r\n            .addCase(addNote.fulfilled, (state, action) => {\r\n                state.status = \"succeeded\";\r\n                state.items.push(action.payload);\r\n            })\r\n            .addCase(addNote.rejected, (state, action) => {\r\n                state.status = \"failed\";\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,cAAc;AAE9B,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,OAAOG,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EAC7F,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,OAAOL,eAAe,CAAC,EAAAK,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,CAACG,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC;EACzE;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGX,gBAAgB,CAAC,eAAe,EAAE,OAAOY,QAAQ,EAAE;EAAER;AAAgB,CAAC,KAAK;EAC9F,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACY,IAAI,CAAC,SAAS,EAAED,QAAQ,CAAC;IACpD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA;IACZ,OAAOV,eAAe,CAAC,EAAAU,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBP,IAAI,CAACG,OAAO,KAAIF,KAAK,CAACE,OAAO,CAAC;EACzE;AACJ,CAAC,CAAC;AAEF,MAAMK,UAAU,GAAGhB,WAAW,CAAC;EAC3BiB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdX,KAAK,EAAE;EACX,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACpB,UAAU,CAACqB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACL,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDG,OAAO,CAACpB,UAAU,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACpB,UAAU,CAAC0B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAAChB,KAAK,GAAGkB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACX,OAAO,CAACY,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACL,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDG,OAAO,CAACX,OAAO,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC3CF,KAAK,CAACL,MAAM,GAAG,WAAW;MAC1BK,KAAK,CAACN,KAAK,CAACW,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC,CACDL,OAAO,CAACX,OAAO,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAAChB,KAAK,GAAGkB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}