{"ast":null,"code":"// import React from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useForm } from \"react-hook-form\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { loginUser } from \"../redux/authSlice\"; // Import login action\n// import \"react-toastify/dist/ReactToastify.css\";\n// import Header from \"../layouts/Header\";\n\n// const Login = () => {\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n//     const { loading, error } = useSelector((state) => state.auth);\n\n//     const {\n//         register,\n//         handleSubmit,\n//         formState: { errors },\n//     } = useForm();\n\n//     const onSubmit = async (data) => {\n\n//         const result = await dispatch(loginUser(data));\n\n//         if (result.meta.requestStatus === \"fulfilled\") {\n//             toast.success(\"Login Successful!\");\n//             navigate(\"/dashboard\");\n//         } else {\n//             toast.error(result.payload || \"Login failed\");\n//         }\n//     };\n\n//     return (\n//         <>\n//             <main>\n//                 <Header />\n//                 <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\n//                 <div className=\"bg-light min-vh-100 d-flex justify-content-center align-items-center\">\n//                     <div className=\"card shadow-lg border-0 rounded\" style={{ width: \"100%\", maxWidth: \"400px\" }}>\n//                         <div className=\"card-header bg-primary text-white text-center py-3\">\n//                             <h4>Login</h4>\n//                         </div>\n//                         <div className=\"card-body p-4\">\n//                             <form onSubmit={handleSubmit(onSubmit)}>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"email\" className=\"form-label\">\n//                                         Email address\n//                                     </label>\n//                                     <input\n//                                         {...register(\"email\", {\n//                                             required: \"Email is required\",\n//                                             pattern: {\n//                                                 value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n//                                                 message: \"Invalid email address\",\n//                                             },\n//                                         })}\n//                                         type=\"email\"\n//                                         id=\"email\"\n//                                         placeholder=\"Enter your email\"\n//                                         className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\n//                                         aria-invalid={errors.email ? \"true\" : \"false\"}\n//                                     />\n//                                     {errors.email && <p className=\"invalid-feedback\">{errors.email?.message}</p>}\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"password\" className=\"form-label\">\n//                                         Password\n//                                     </label>\n//                                     <input\n//                                         {...register(\"password\", { required: \"Password is required\" })}\n//                                         type=\"password\"\n//                                         id=\"password\"\n//                                         placeholder=\"Enter your password\"\n//                                         className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\n//                                         aria-invalid={errors.password ? \"true\" : \"false\"}\n//                                     />\n//                                     {errors.password && <p className=\"invalid-feedback\">{errors.password?.message}</p>}\n//                                 </div>\n\n//                                 <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>\n//                                     {loading ? \"Logging in...\" : \"Submit\"}\n//                                 </button>\n//                             </form>\n//                             {error && <p className=\"text-danger text-center mt-2\">{error}</p>}\n//                             <div className=\"text-center mt-3\">\n//                                 <p>\n//                                     Don't have an account? <Link to=\"/register\">Register</Link>\n//                                 </p>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </main>\n//         </>\n//     );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["D:/MytaskFinal/frontend/src/pages/Login.js"],"sourcesContent":["// import React from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { loginUser } from \"../redux/authSlice\"; // Import login action\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import Header from \"../layouts/Header\";\r\n\r\n// const Login = () => {\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n//     const { loading, error } = useSelector((state) => state.auth);\r\n\r\n//     const {\r\n//         register,\r\n//         handleSubmit,\r\n//         formState: { errors },\r\n//     } = useForm();\r\n\r\n//     const onSubmit = async (data) => {\r\n        \r\n//         const result = await dispatch(loginUser(data));\r\n\r\n//         if (result.meta.requestStatus === \"fulfilled\") {\r\n//             toast.success(\"Login Successful!\");\r\n//             navigate(\"/dashboard\");\r\n//         } else {\r\n//             toast.error(result.payload || \"Login failed\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <main>\r\n//                 <Header />\r\n//                 <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\r\n//                 <div className=\"bg-light min-vh-100 d-flex justify-content-center align-items-center\">\r\n//                     <div className=\"card shadow-lg border-0 rounded\" style={{ width: \"100%\", maxWidth: \"400px\" }}>\r\n//                         <div className=\"card-header bg-primary text-white text-center py-3\">\r\n//                             <h4>Login</h4>\r\n//                         </div>\r\n//                         <div className=\"card-body p-4\">\r\n//                             <form onSubmit={handleSubmit(onSubmit)}>\r\n//                                 <div className=\"mb-3\">\r\n//                                     <label htmlFor=\"email\" className=\"form-label\">\r\n//                                         Email address\r\n//                                     </label>\r\n//                                     <input\r\n//                                         {...register(\"email\", {\r\n//                                             required: \"Email is required\",\r\n//                                             pattern: {\r\n//                                                 value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n//                                                 message: \"Invalid email address\",\r\n//                                             },\r\n//                                         })}\r\n//                                         type=\"email\"\r\n//                                         id=\"email\"\r\n//                                         placeholder=\"Enter your email\"\r\n//                                         className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\r\n//                                         aria-invalid={errors.email ? \"true\" : \"false\"}\r\n//                                     />\r\n//                                     {errors.email && <p className=\"invalid-feedback\">{errors.email?.message}</p>}\r\n//                                 </div>\r\n//                                 <div className=\"mb-3\">\r\n//                                     <label htmlFor=\"password\" className=\"form-label\">\r\n//                                         Password\r\n//                                     </label>\r\n//                                     <input\r\n//                                         {...register(\"password\", { required: \"Password is required\" })}\r\n//                                         type=\"password\"\r\n//                                         id=\"password\"\r\n//                                         placeholder=\"Enter your password\"\r\n//                                         className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\r\n//                                         aria-invalid={errors.password ? \"true\" : \"false\"}\r\n//                                     />\r\n//                                     {errors.password && <p className=\"invalid-feedback\">{errors.password?.message}</p>}\r\n//                                 </div>\r\n\r\n//                                 <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={loading}>\r\n//                                     {loading ? \"Logging in...\" : \"Submit\"}\r\n//                                 </button>\r\n//                             </form>\r\n//                             {error && <p className=\"text-danger text-center mt-2\">{error}</p>}\r\n//                             <div className=\"text-center mt-3\">\r\n//                                 <p>\r\n//                                     Don't have an account? <Link to=\"/register\">Register</Link>\r\n//                                 </p>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </main>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}